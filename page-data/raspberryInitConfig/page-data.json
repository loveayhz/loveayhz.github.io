{"componentChunkName":"component---src-templates-blog-post-js","path":"/raspberryInitConfig/","result":{"data":{"site":{"siteMetadata":{"title":"爱吃辣条的猫"}},"markdownRemark":{"id":"791312a6-5dd9-52e2-8e94-63186456358e","excerpt":"树莓派到手装完系统后的操作记录： 1.安装vim，修改vim无法复制的问题 2.修改源，改为清华源 3.修改root用户密码： 4.安装docker：https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/ 常规安装 失败， 问题还是在于网络，于是设置了HTTPS…","html":"<p>树莓派到手装完系统后的操作记录：</p>\n<p>1.安装vim，<a href=\"https://ayhz.art/article/1213\">修改vim无法复制的问题</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt-get install vim\npi@raspberrypi2:~ $ whereis vim\nvim: /usr/bin/vim /etc/vim /usr/share/vim /usr/share/man/man1/vim.1.gz\npi@raspberrypi2:~ $ cd /usr/share/vim\npi@raspberrypi2:/usr/share/vim $ ls\naddons  registry  vim90\npi@raspberrypi2:/usr/share/vim $ cd vim90/\npi@raspberrypi2:/usr/share/vim/vim90 $ ls\nautoload       compiler      delmenu.vim  filetype.vim  ftplugin.vim        import      indoff.vim  macros     optwin.vim  print        synmenu.vim  vimrc_example.vim\nbugreport.vim  debian.vim    doc          ftoff.vim     ftplugof.vim        indent      keymap      menu.vim   pack        scripts.vim  syntax\ncolors         defaults.vim  evim.vim     ftplugin      gvimrc_example.vim  indent.vim  lang        mswin.vim  plugin      spell        tutor\npi@raspberrypi2:/usr/share/vim/vim90 $ cd ~\npi@raspberrypi2:~ $ sudo vim /usr/share/vim/vim90/defaults.vim</code></pre></div>\n<p>2.修改源，<a href=\"\">改为清华源</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pi@raspberrypi2:~ $ sudo vim /etc/apt/sources.list\npi@raspberrypi2:~ $ sudo vim /etc/apt/sources.list.d/raspi.list\npi@raspberrypi2:~ $ sudo apt update -y\npi@raspberrypi2:~ $ sudo apt upgrade -y\npi@raspberrypi2:~ $ systemctl --user daemon-reload &amp;&amp; \\\n    systemctl --user restart rpi-connect.service</code></pre></div>\n<p>3.<a href=\"https://blog.zydyh.net/?p=423\">修改root用户密码</a>：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pi@raspberrypi2:/etc/apt/sources.list.d $ sudo passwd root\nNew password: \nRetype new password: \npasswd: password updated successfully\npi@raspberrypi2:/etc/apt/sources.list.d $ sudo passwd --unlock root\nUsage: passwd [options] [LOGIN]\n\nOptions:\n  -a, --all                     report password status on all accounts\n  -d, --delete                  delete the password for the named account\n  -e, --expire                  force expire the password for the named account\n  -h, --help                    display this help message and exit\n  -k, --keep-tokens             change password only if expired\n  -i, --inactive INACTIVE       set password inactive after expiration\n                                to INACTIVE\n  -l, --lock                    lock the password of the named account\n  -n, --mindays MIN_DAYS        set minimum number of days before password\n                                change to MIN_DAYS\n  -q, --quiet                   quiet mode\n  -r, --repository REPOSITORY   change password in REPOSITORY repository\n  -R, --root CHROOT_DIR         directory to chroot into\n  -S, --status                  report password status on the named account\n  -u, --unlock                  unlock the password of the named account\n  -w, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS\n  -x, --maxdays MAX_DAYS        set maximum number of days before password\n                                change to MAX_DAYS</code></pre></div>\n<p>4.安装docker：<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/\">https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/</a></p>\n<p>常规安装 <code class=\"language-text\">sudo curl -sSL https://get.docker.com | sh</code>失败，</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pi@raspberrypi2:~ $ sudo curl -sSL https://get.docker.com | sh\ncurl: (28) Failed to connect to get.docker.com port 443 after 134152 ms: Couldn't connect to server</code></pre></div>\n<p>问题还是在于网络，于是设置了HTTPS_PROXY和HTTP_PROXY,还是不行</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pi@raspberrypi2:~ $ export HTTP_PROXY=http://192.168.1.7:10809\npi@raspberrypi2:~ $ export HTTPS_PROXY=http://192.168.1.7:10809\npi@raspberrypi2:~ $ sudo curl -sSL https://get.docker.com | sh\n# Executing docker install script, commit: 6d9743e9656cc56f699a64800b098d5ea5a60020\n+ sudo -E sh -c apt-get update -qq >/dev/null\n+ sudo -E sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null\n+ sudo -E sh -c install -m 0755 -d /etc/apt/keyrings\n+ sudo -E sh -c curl -fsSL \"https://download.docker.com/linux/debian/gpg\" -o /etc/apt/keyrings/docker.asc\n+ sudo -E sh -c chmod a+r /etc/apt/keyrings/docker.asc\n+ sudo -E sh -c echo \"deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable\" > /etc/apt/sources.list.d/docker.list\n+ sudo -E sh -c apt-get update -qq >/dev/null\nW: Failed to fetch https://download.docker.com/linux/debian/dists/bookworm/InRelease  Could not connect to download.docker.com:443 (2a03:2880:f102:183:face:b00c:0:25de), connection timed out Could not connect to download.docker.com:443 (185.60.216.169), connection timed out\nW: Some index files failed to download. They have been ignored, or old ones used instead.\n+ sudo -E sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-ce-rootless-extras docker-buildx-plugin >/dev/null\nE: Package 'docker-ce' has no installation candidate\nE: Package 'docker-ce-cli' has no installation candidate\nE: Unable to locate package containerd.io\nE: Couldn't find any package by glob 'containerd.io'\nE: Couldn't find any package by regex 'containerd.io'\nE: Unable to locate package docker-compose-plugin\nE: Package 'docker-ce-rootless-extras' has no installation candidate\nE: Unable to locate package docker-buildx-plugin\npi@raspberrypi2:~ $ sudo curl -sSL https://get.docker.com | sh\n# Executing docker install script, commit: 6d9743e9656cc56f699a64800b098d5ea5a60020\n+ sudo -E sh -c apt-get update -qq >/dev/null\nW: Failed to fetch https://download.docker.com/linux/debian/dists/bookworm/InRelease  Could not connect to download.docker.com:443 (2a03:2880:f102:183:face:b00c:0:25de), connection timed out Could not connect to download.docker.com:443 (185.60.216.169), connection timed out\nW: Some index files failed to download. They have been ignored, or old ones used instead.\n+ sudo -E sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null\n+ sudo -E sh -c install -m 0755 -d /etc/apt/keyrings\n+ sudo -E sh -c curl -fsSL \"https://download.docker.com/linux/debian/gpg\" -o /etc/apt/keyrings/docker.asc\n+ sudo -E sh -c chmod a+r /etc/apt/keyrings/docker.asc\n+ sudo -E sh -c echo \"deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable\" > /etc/apt/sources.list.d/docker.list\n+ sudo -E sh -c apt-get update -qq >/dev/null\nW: Failed to fetch https://download.docker.com/linux/debian/dists/bookworm/InRelease  Could not connect to download.docker.com:443 (2a03:2880:f102:183:face:b00c:0:25de), connection timed out Could not connect to download.docker.com:443 (185.60.216.169), connection timed out\nW: Some index files failed to download. They have been ignored, or old ones used instead.\n+ sudo -E sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-ce-rootless-extras docker-buildx-plugin >/dev/null\nE: Package 'docker-ce' has no installation candidate\nE: Package 'docker-ce-cli' has no installation candidate\nE: Unable to locate package containerd.io\nE: Couldn't find any package by glob 'containerd.io'\nE: Couldn't find any package by regex 'containerd.io'\nE: Unable to locate package docker-compose-plugin\nE: Package 'docker-ce-rootless-extras' has no installation candidate\nE: Unable to locate package docker-buildx-plugin</code></pre></div>\n<p>找到清华大学镜像站docker的安装教程：<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/\">https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/</a></p>\n<p>教程使用注意：比较人性化的提供了是否使用sudo，ipv4还是v6,系统发行版本等选项可以进行更改，</p>\n<p>我们使用树莓派的官方系统，所以参考 <code class=\"language-text\">Debian/Ubuntu/Raspbian 用户</code></p>\n<p>如果我们没有选择sudo，则需要切换至root用户安装，刚安装的树莓派系统只有pi用户，使用pi用户登录后</p>\n<p><code class=\"language-text\">sudo passwd root</code>更改root用户密码，</p>\n<p><code class=\"language-text\">sudo passwd --unlock root</code>解锁root用户，</p>\n<p><code class=\"language-text\">sudo -i</code>切换root用户</p>\n<p>5.设置静态ip</p>\n<p>dhcp的方式参考：<a href=\"https://blog.csdn.net/m0_47673868/article/details/132410559%EF%BC%8C%E5%A6%82%E4%B8%8B%EF%BC%8C%E6%88%91%E4%BD%BF%E7%94%A8%E6%9C%80%E6%96%B0%E7%89%88%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%EF%BC%8C%E4%BC%BC%E4%B9%8E%E6%B2%A1%E6%9C%89%E5%90%AF%E7%94%A8dhcpd%E6%9C%8D%E5%8A%A1%EF%BC%8C%E6%89%80%E4%BB%A5%E5%B9%B6%E6%B2%A1%E6%9C%89%E7%94%A8\">https://blog.csdn.net/m0_47673868/article/details/132410559，如下，我使用最新版的树莓派系统，似乎没有启用dhcpd服务，所以并没有用</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo vim /etc/dhcpcd.conf\ninterface wlan0\nstatic ip_address=192.168.1.42/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1\n\ninterface eth0\nstatic ip_address=192.168.1.142/24\nstatic routers=192.168.1.1\nstatic domain_name_servers=192.168.1.1</code></pre></div>\n<p>使用nmcli的方式：<a href=\"https://www.jb51.net/jiaoben/318584xui.htm\">Linux 中 nmcli 命令使用详解_linux shell_脚本之家</a></p>\n<div class=\"gatsby-highlight\" data-language=\"linux\"><pre class=\"language-linux\"><code class=\"language-linux\">pi@raspberrypi2:~ $ systemctl status NetworkManager\n● NetworkManager.service - Network Manager\n     Loaded: loaded (/lib/systemd/system/NetworkManager.service; enabled; preset: enabled)\n     Active: active (running) since Thu 2024-07-18 20:03:24 CST; 9min ago\n       Docs: man:NetworkManager(8)\n   Main PID: 677 (NetworkManager)\n      Tasks: 3 (limit: 3910)\n        CPU: 881ms\n     CGroup: /system.slice/NetworkManager.service\n             └─677 /usr/sbin/NetworkManager --no-daemon\n\nJul 18 20:03:37 raspberrypi2 NetworkManager[677]: &lt;info&gt;  [1721304217.3022] device (docker0): state change: unavailable -&gt; disconnected (reason &#39;connection-assumed&#39;, sys-iface-state: &#39;extern&gt;\nJul 18 20:03:37 raspberrypi2 NetworkManager[677]: &lt;info&gt;  [1721304217.3045] device (docker0): Activation: starting connection &#39;docker0&#39; (62dc214c-0abe-45d8-9356-b7d5cbcfc558)\nJul 18 20:03:37 raspberrypi2 NetworkManager[677]: &lt;info&gt;  [1721304217.3048] device (docker0): state change: disconnected -&gt; prepare (reason &#39;none&#39;, sys-iface-state: &#39;external&#39;)\nJul 18 20:03:37 raspberrypi2 NetworkManager[677]: &lt;info&gt;  [1721304217.3054] device (docker0): state change: prepare -&gt; config (reason &#39;none&#39;, sys-iface-state: &#39;external&#39;)\nJul 18 20:03:37 raspberrypi2 NetworkManager[677]: &lt;info&gt;  [1721304217.3059] device (docker0): state change: config -&gt; ip-config (reason &#39;none&#39;, sys-iface-state: &#39;external&#39;)\nJul 18 20:03:37 raspberrypi2 NetworkManager[677]: &lt;info&gt;  [1721304217.3065] device (docker0): state change: ip-config -&gt; ip-check (reason &#39;none&#39;, sys-iface-state: &#39;external&#39;)\nJul 18 20:03:37 raspberrypi2 NetworkManager[677]: &lt;info&gt;  [1721304217.3115] device (docker0): state change: ip-check -&gt; secondaries (reason &#39;none&#39;, sys-iface-state: &#39;external&#39;)\nJul 18 20:03:37 raspberrypi2 NetworkManager[677]: &lt;info&gt;  [1721304217.3120] device (docker0): state change: secondaries -&gt; activated (reason &#39;none&#39;, sys-iface-state: &#39;external&#39;)\nJul 18 20:03:37 raspberrypi2 NetworkManager[677]: &lt;info&gt;  [1721304217.3133] device (docker0): Activation: successful, device activated.\nJul 18 20:03:38 raspberrypi2 NetworkManager[677]: &lt;info&gt;  [1721304218.1935] agent-manager: agent[0bc0c5cb61420b66,:1.37/org.freedesktop.nm-applet/1000]: agent registered\npi@raspberrypi2:~ $ sudo nmcli -p connection show\n======================================\n  NetworkManager connection profiles\n======================================\nNAME                UUID                                  TYPE      DEVICE  \n-------------------------------------------------------------------------------------------------------------------\nWired connection 1  634f57f4-a4d9-30e1-8956-ba928c97993e  ethernet  end0  \npreconfigured       0c10eaa9-8ee6-4d24-8d22-3816213d80dd  wifi      wlan0   \nlo                  bbba6acb-90bc-4b4c-8e83-162fadd39ba9  loopback  lo  \ndocker0             1cec0f18-62b3-4610-afea-56ec33d18822  bridge    docker0 \npi@raspberrypi2:~ $ hostname -I\n192.168.1.8 192.168.1.3 172.17.0.1 2409:8a55:51a1:5150:b536:a16b:a3b:600b 2409:8a55:51a1:5150:4213:8ea:ed34:ded7\n# IP地址/24之前的\nsudo nmcli c mod &#39;Wired connection 1&#39; ipv4.addresses 192.168.2.2/24 ipv4.method manual\n# 网关\nsudo nmcli con mod &#39;Wired connection 1&#39; ipv4.gateway 192.168.0.1\n# DNS服务器\nsudo nmcli con mod &#39;Wired connection 1&#39; ipv4.dns &quot;192.168.0.1&quot;\n# 更新有线网络，需要在插网线模式下才能更新成功\nsudo nmcli c down &#39;Wired connection 1&#39; &amp;&amp; sudo nmcli c up &#39;Wired connection 1&#39;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pi@raspberrypi2:~ $ sudo nmcli -p connection show\n======================================\n  NetworkManager connection profiles\n======================================\nNAME                UUID                                  TYPE      DEVICE  \n-------------------------------------------------------------------------------------------------------------------\nWired connection 1  634f57f4-a4d9-30e1-8956-ba928c97993e  ethernet  end0  \npreconfigured       0c10eaa9-8ee6-4d24-8d22-3816213d80dd  wifi      wlan0   \nlo                  ca554f79-c94a-44fd-bf2f-95e7b1cd5784  loopback  lo  \ndocker0             62dc214c-0abe-45d8-9356-b7d5cbcfc558  bridge    docker0 \npi@raspberrypi2:~ $ sudo nmcli connection modify \"preconfigured\" ipv4.addresses 192.168.1.42/24 ipv4.method manual\npi@raspberrypi2:~ $ ifconfig\ndocker0: flags=4099&lt;UP,BROADCAST,MULTICAST>  mtu 1500\n        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255\n        ether 02:42:c2:f8:ee:5a  txqueuelen 0  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nend0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.1.8  netmask 255.255.255.0  broadcast 192.168.1.255\n        inet6 fe80::1645:eed0:2d18:6916  prefixlen 64  scopeid 0x20&lt;link>\n        inet6 2409:8a55:51a1:5150:b536:a16b:a3b:600b  prefixlen 64  scopeid 0x0&lt;global>\n        ether dc:a6:32:5c:74:0a  txqueuelen 1000  (Ethernet)\n        RX packets 195037  bytes 12078246 (11.5 MiB)\n        RX errors 0  dropped 184128  overruns 0  frame 0\n        TX packets 3808  bytes 293965 (287.0 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host>\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 34  bytes 3358 (3.2 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 34  bytes 3358 (3.2 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nwlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.1.3  netmask 255.255.255.0  broadcast 192.168.1.255\n        inet6 fe80::afad:4a8f:7e05:e97e  prefixlen 64  scopeid 0x20&lt;link>\n        inet6 2409:8a55:51a1:5150:4213:8ea:ed34:ded7  prefixlen 64  scopeid 0x0&lt;global>\n        ether dc:a6:32:5c:74:0b  txqueuelen 1000  (Ethernet)\n        RX packets 1436  bytes 188822 (184.3 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 855  bytes 76272 (74.4 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\npi@raspberrypi2:~ $ sudo nmcli c down 'preconfigured' &amp;&amp; sudo nmcli c up 'preconfigured'\nConnection 'preconfigured' successfully deactivated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/2)\n\nConnection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/5)\npi@raspberrypi2:~ $ ifconfig\ndocker0: flags=4099&lt;UP,BROADCAST,MULTICAST>  mtu 1500\n        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255\n        ether 02:42:c2:f8:ee:5a  txqueuelen 0  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nend0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.1.8  netmask 255.255.255.0  broadcast 192.168.1.255\n        inet6 1234::1645:eed0:2d18:6916  prefixlen 64  scopeid 0x20&lt;link>\n        inet6 1234:8a55:51a1:5150:b536:a16b:a3b:600b  prefixlen 64  scopeid 0x0&lt;global>\n        ether ab:a6:32:5c:74:0a  txqueuelen 1000  (Ethernet)\n        RX packets 195856  bytes 12141695 (11.5 MiB)\n        RX errors 0  dropped 184494  overruns 0  frame 0\n        TX packets 4339  bytes 335441 (327.5 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host>\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 34  bytes 3358 (3.2 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 34  bytes 3358 (3.2 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nwlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.1.42  netmask 255.255.255.0  broadcast 192.168.1.255\n        inet6 1234::afad:4a8f:7e05:e97e  prefixlen 64  scopeid 0x20&lt;link>\n        inet6 1234:8a55:51a1:5150:4213:8ea:ed34:ded7  prefixlen 64  scopeid 0x0&lt;global>\n        ether ab:cd:32:5c:74:0b  txqueuelen 1000  (Ethernet)\n        RX packets 1439  bytes 189138 (184.7 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 900  bytes 82046 (80.1 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\npi@raspberrypi2:~ $\nsudo nmcli connection modify 'Wired connection 1' ipv4.addresses 192.168.1.142/24 ipv4.method manual\nsudo nmcli c down 'Wired connection 1' &amp;&amp; sudo nmcli c up 'Wired connection 1'</code></pre></div>\n<p>这样使用dhcp不行的时候，使用nmcli的方式修改有线和wifi的静态ip，这样三个修改完之后，同时再修改笔记本的ip为静态的。方便我们给树莓派开代理，否则动态的ip每次都要修改，尤其docker的代理设置更不方便，每次需要重启docker.</p>\n<p>为raspberry也设置静态服务时发现，它既没有启用dhcpd也没有启用NetworkManager</p>\n<p>关于这点：<a href=\"https://blog.csdn.net/qq_33919450/article/details/134258422\">如何使用树莓派Bookworm系统中配置网络的新方法NetworkManager</a> 说的很清楚，即Bookworm 版本系统中，将使用多年的 dhcpcd 换成了 NetworkManager（以前是在rasp-config中可选）</p>\n<p>所以我查看系统发行版本，果然是bullseye而非Bookworm，于是使用raspi-config启用NetworkManager服务，然后再使用nmcli启用静态ip，另外，使用nmtui也可以通过NetworkManager进行配置</p>\n<p>不过，尴尬的是raspberry通过raspi-config配置使用NetworkManager后就连接不上ssh了，ip地址也找不到</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pi@raspberrypi:~ $ systemctl status NetworkManager\n● NetworkManager.service - Network Manager\n     Loaded: loaded (/lib/systemd/system/NetworkManager.service; disabled; vendor preset: enabled)\n    Drop-In: /usr/lib/systemd/system/NetworkManager.service.d\n             └─10-dhcpcd.conf\n     Active: inactive (dead)\n       Docs: man:NetworkManager(8)\npi@raspberrypi:~ $ systemctl status dhcpd\nUnit dhcpd.service could not be found.\npi@raspberrypi:~ $ nmtui\nNetworkManager is not running.\npi@raspberrypi:~ $ arch\naarch64\npi@raspberrypi:~ $ cat /proc/device-tree/model\nRaspberry Pi 4 Model B Rev 1.2pi@raspberrypi:~ $ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Debian\nDescription:    Debian GNU/Linux 11 (bullseye)\nRelease:        11\nCodename:       bullseye\npi@raspberrypi:~ $ sudo raspi-config</code></pre></div>\n<p>连接网线之后重新连接ssh，ifconfig发现wlan0没有ipv4,而且sudo nmcli connection show没有wlan0</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pi@raspberrypi:~ $ ifconfig\nbr-ca6290c2c50a: flags=4099&lt;UP,BROADCAST,MULTICAST>  mtu 1500\n        inet 172.19.0.1  netmask 255.255.0.0  broadcast 172.19.255.255\n        ether 12:34:58:54:a3:3c  txqueuelen 0  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\ndocker0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255\n        inet6 abcd::42:faff:fe02:47b1  prefixlen 64  scopeid 0x20&lt;link>\n        ether 12:34:fa:02:47:b1  txqueuelen 0  (Ethernet)\n        RX packets 17  bytes 1568 (1.5 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 48  bytes 10022 (9.7 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\ndocker_gwbridge: flags=4099&lt;UP,BROADCAST,MULTICAST>  mtu 1500\n        inet 172.18.0.1  netmask 255.255.0.0  broadcast 172.18.255.255\n        ether 02:42:49:13:54:b9  txqueuelen 0  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\neth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.1.6  netmask 255.255.255.0  broadcast 192.168.1.255\n        inet6 abcd::e292:bd12:ad8d:7a3c  prefixlen 64  scopeid 0x20&lt;link>\n        inet6 abcd:8a55:51a1:5150:29c0:bb72:d3e9:fcb7  prefixlen 64  scopeid 0x0&lt;global>\n        ether 12:a6:32:74:3c:77  txqueuelen 1000  (Ethernet)\n        RX packets 304  bytes 32842 (32.0 KiB)\n        RX errors 0  dropped 151  overruns 0  frame 0\n        TX packets 163  bytes 20877 (20.3 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING>  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host>\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 122  bytes 14550 (14.2 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 122  bytes 14550 (14.2 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nveth8adfb82: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet6 abcd::78b7:ecff:fe3e:dff7  prefixlen 64  scopeid 0x20&lt;link>\n        ether 12:b7:ec:3e:df:f7  txqueuelen 0  (Ethernet)\n        RX packets 17  bytes 1806 (1.7 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 58  bytes 11476 (11.2 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nvethfd6fb43: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet6 1234::9c79:b3ff:fe83:bef0  prefixlen 64  scopeid 0x20&lt;link>\n        ether 12:79:b3:83:be:f0  txqueuelen 0  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 43  bytes 5834 (5.6 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nwlan0: flags=4099&lt;UP,BROADCAST,MULTICAST>  mtu 1500\n        ether 12:bf:83:a9:2e:eb  txqueuelen 1000  (Ethernet)\n        RX packets 0  bytes 0 (0.0 B)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 0  bytes 0 (0.0 B)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0   \npi@raspberrypi:~ $ sudo networkctl list\nWARNING: systemd-networkd is not running, output will be incomplete.\n\nIDX LINK            TYPE     OPERATIONAL SETUP\n  1 lo              loopback n/a         unmanaged\n  2 eth0            ether    n/a         unmanaged\n  3 wlan0           wlan     n/a         unmanaged\n  4 docker_gwbridge bridge   n/a         unmanaged\n  5 br-ca6290c2c50a bridge   n/a         unmanaged\n  6 docker0         bridge   n/a         unmanaged\n  8 vethfd6fb43     ether    n/a         unmanaged\n 10 veth8adfb82     ether    n/a         unmanaged\n\n8 links listed.\npi@raspberrypi:~ $ sudo nmcli connection show\nNAME                UUID                                  TYPE      DEVICE  \nWired connection 1  865e1185-89a7-3539-af55-bf06065b89d9  ethernet  eth0  \ndocker0             b4234078-9016-4c21-962d-2ce79b66bf57  bridge    docker0   \nbr-ca6290c2c50a     ac576ffc-6ca3-4387-929b-005d74b62537  bridge    br-ca6290c2c50a \ndocker_gwbridge     8a62ae80-766f-483f-b675-a297ed127d78  bridge    docker_gwbridge \nsudo nmcli connection modify 'Wired connection 1' ipv4.addresses 192.168.1.141/24 ipv4.method manual\nsudo nmcli c down 'Wired connection 1' &amp;&amp; sudo nmcli c up 'Wired connection 1'</code></pre></div>\n<p>使用 <code class=\"language-text\">sudo ifconfig wlan0 up</code>尝试启用，还是不起作用，于是我试着再次 <code class=\"language-text\">sudo raspi-config</code>配置无线SSID,配置后就可以使用了，不知道原因.可能是bug?</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pi@raspberrypi:~ $ sudo nmcli connection show\nNAME                UUID                                  TYPE      DEVICE  \nWired connection 1  865e1185-89a7-3539-af55-bf06065b89d9  ethernet  eth0  \nCMCC-A1-1102        d81636d3-cddd-48a1-9a1b-ea7d084d4284  wifi      wlan0   \ndocker0             b4234078-9016-4c21-962d-2ce79b66bf57  bridge    docker0   \nbr-ca6290c2c50a     ac576ffc-6ca3-4387-929b-005d74b62537  bridge    br-ca6290c2c50a \ndocker_gwbridge     8a62ae80-766f-483f-b675-a297ed127d78  bridge    docker_gwbridge\nsudo nmcli connection modify 'Wired connection 1' ipv4.addresses 192.168.1.141/24 ipv4.method manual\nsudo nmcli c down 'Wired connection 1' &amp;&amp; sudo nmcli c up 'Wired connection 1'\nsudo nmcli connection modify 'CMCC-A1-1102' ipv4.addresses 192.168.1.41/24 ipv4.method manual\nsudo nmcli c down 'CMCC-A1-1102' &amp;&amp; sudo nmcli c up 'CMCC-A1-1102'</code></pre></div>\n<p>这样就可以了。</p>\n<p>但是注意：在 <code class=\"language-text\">输入密码的时候一定要注意键盘的大小写</code>，刚才因为键盘不知道什么时候切换了大写连输了好多次密码都错误，最后打字的时候才发现是大写了，真的应该给capsLock也加一个指示灯或者输入法应该有标识大小写。</p>\n<p>这样我们的三块树莓派分别设置了静态ip为41,42和43，对应如果接了有线的话就是141,142和143.</p>\n<p>接下来给笔记本设置静态ip,同时尝试树莓派docker安装v2rayN或者clash，以及git代理</p>\n<p>6.docker配置本地docker registry和代理解决docker镜像无法访问的问题:</p>\n<p>(1).配置docker registry的insecure-registries(默认docker pull是https会报错):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pi@raspberrypi3:~ $ sudo vim /etc/docker/daemon.json\npi@raspberrypi3:~ $ cat /etc/docker/daemon.json\n{\n  \"registry-mirrors\": [\"https://xiangpeach123456.mirror.aliyuncs.com\"],\n  \"insecure-registries\": [\"192.168.1.43:5000\"]\n}\npi@raspberrypi3:~ $ systemctl daemon-reload\npi@raspberrypi3:~ $ systemctl restart docker\npi@raspberrypi3:~ $ docker pull 192.168.1.43:5000/minio/mc:RELEASE.2021-04-22T17-40-00Z</code></pre></div>\n<p>(2)配置docker代理，这里局域网内的笔记本开了v2rayN代理，在参数设置中允许来自局域网的连接√，并且笔记本设置ipv4手动固定为192.168.1.40，默认socks5代理端口号是10808，则http代理端口号为10808+1=10809，如下设置之后且192.168.1.40正常开启着代理，才可正常访问docker registry</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo mkdir -p /etc/systemd/system/docker.service.d\npi@raspberrypi3:~ $ sudo vim /etc/systemd/system/docker.service.d/http-proxy.conf\n[Service]\nEnvironment=\"HTTP_PROXY=http://192.168.1.40:10809\"\nEnvironment=\"HTTPS_PROXY=http://192.168.1.40:10809\"\nEnvironment=\"NO_PROXY=localhost,127.0.0.1,192.168.1.41,192.168.1.42,192.168.1.43,.ayhz.art,.tuna.tsinghua.edu.cn\"\n\npi@raspberrypi3:~ $ sudo systemctl daemon-reload\npi@raspberrypi3:~ $ sudo systemctl restart docker\npi@raspberrypi3:~ $ docker pull shellspec/openwrt</code></pre></div>\n<p>6.docker安装配置frpc因为更改了树莓派的ip,可能导致之前的镜像有一些问题，打了tag之后还是不行。</p>\n<p>另外代理也必须开全局才行，而且速度有点慢</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pi@raspberrypi2:~ $ sudo docker pull 192.168.1.43:5000/snowdreamtech/frpc:0.52.1\nError response from daemon: manifest for 192.168.1.43:5000/snowdreamtech/frpc:0.52.1 not found: manifest unknown: manifest unknown\npi@raspberrypi2:~ $ sudo docker pull snowdreamtech/frpc:0.52.1\nError response from daemon: Get \"https://registry-1.docker.io/v2/\": net/http: TLS handshake timeout\npi@raspberrypi2:~ $ sudo docker pull snowdreamtech/frpc:0.52.1\n0.52.1: Pulling from snowdreamtech/frpc\n579b34f0a95b: Pull complete \n114d621e9ab5: Pull complete \nDigest: sha256:7dd470795c91ae3f8ae3a18ea58e40b4ded1b4981b749f29f904a6976bea2960\nStatus: Downloaded newer image for snowdreamtech/frpc:0.52.1\ndocker.io/snowdreamtech/frpc:0.52.1</code></pre></div>\n<p>一通操作之后，发现raspberrypi和raspberrypi1反而无法连接到frps了，不知道什么原因，是因为docker代理吗？</p>\n<p>7.树莓派之间开启密钥免密登录。</p>","frontmatter":{"title":"","date":null,"description":null}},"previous":{"fields":{"slug":"/关于golang协程的理解/"},"frontmatter":{"title":"关于goolang协程的理解"}},"next":{"fields":{"slug":"/test/"},"frontmatter":{"title":""}}},"pageContext":{"id":"791312a6-5dd9-52e2-8e94-63186456358e","previousPostId":"c2ddf51d-1d31-5a1b-b1eb-9253be7c730c","nextPostId":"77ec86cb-3f5d-5027-8e81-5ff578f0e2df"}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}